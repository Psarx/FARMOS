{"ast":null,"code":"var _jsxFileName = \"D:\\\\WHEAT WEB\\\\FARMOS\\\\frontend\\\\src\\\\components\\\\Assets\\\\Signup\\\\DiseaseDetection.jsx\",\n  _s = $RefreshSig$();\n// import React from 'react';\n\n// const DiseaseDetection = () => {\n//     return (\n//         <div style={{ textAlign: 'center', padding: '20px' }}>\n//             <h1>Disease Detection</h1>\n//             <p>Here you can input data for disease detection.</p>\n//         </div>\n//     );\n// };\n\n// export default DiseaseDetection;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './DiseaseDetection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiseaseDetection = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const navigate = useNavigate(); // useNavigate hook to navigate programmatically\n\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      const fileType = selectedFile.type;\n      if (fileType === 'image/jpeg' || fileType === 'image/png' || fileType === 'application/pdf') {\n        setFile(selectedFile);\n      } else {\n        alert('Please upload a valid file (jpg, png, or pdf).');\n      }\n    }\n  };\n  const handleDetectDisease = () => {\n    alert('Disease detection in progress...');\n  };\n  const handleLogout = () => {\n    navigate('/login'); // Navigate to login page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles.logoutButton,\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: styles.header,\n      children: \"Disease Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.description,\n      children: \"Upload an image or PDF file for disease detection:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".jpg, .png, .pdf\",\n      onChange: handleFileChange,\n      style: styles.fileInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"File Selected:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: file.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), file.type.startsWith('image') && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: URL.createObjectURL(file),\n        alt: \"Preview\",\n        style: styles.imagePreview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }, this), file.type === 'application/pdf' && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"PDF file selected. You can process this file for disease detection.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles.orangeButton,\n      onClick: handleDetectDisease,\n      children: \"Detect Disease\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(DiseaseDetection, \"a8hUmGYItl0fyIx8Tvn6au4ZieE=\", false, function () {\n  return [useNavigate];\n});\n_c = DiseaseDetection;\nconst styles = {\n  container: {\n    textAlign: 'center',\n    padding: '20px',\n    fontFamily: 'Arial, sans-serif'\n  },\n  logoutButton: {\n    position: 'absolute',\n    top: '10px',\n    left: '10px',\n    backgroundColor: 'orange',\n    color: 'white',\n    border: 'none',\n    padding: '10px 20px',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    fontWeight: 'bold'\n  },\n  header: {\n    fontSize: '2rem',\n    color: '#333'\n  },\n  description: {\n    fontSize: '1.2rem',\n    margin: '20px 0'\n  },\n  fileInput: {\n    padding: '10px',\n    fontSize: '1rem',\n    marginTop: '20px',\n    borderRadius: '5px',\n    border: '1px solid #ccc'\n  },\n  imagePreview: {\n    maxWidth: '300px',\n    marginTop: '20px'\n  },\n  orangeButton: {\n    backgroundColor: 'orange',\n    color: 'white',\n    border: 'none',\n    padding: '15px 30px',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    fontSize: '1rem',\n    fontWeight: 'bold',\n    marginTop: '20px'\n  }\n};\nexport default DiseaseDetection;\nvar _c;\n$RefreshReg$(_c, \"DiseaseDetection\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","DiseaseDetection","_s","file","setFile","navigate","handleFileChange","e","selectedFile","target","files","fileType","type","alert","handleDetectDisease","handleLogout","style","styles","container","children","logoutButton","onClick","fileName","_jsxFileName","lineNumber","columnNumber","header","description","accept","onChange","fileInput","name","startsWith","src","URL","createObjectURL","alt","imagePreview","orangeButton","_c","textAlign","padding","fontFamily","position","top","left","backgroundColor","color","border","borderRadius","cursor","fontWeight","fontSize","margin","marginTop","maxWidth","$RefreshReg$"],"sources":["D:/WHEAT WEB/FARMOS/frontend/src/components/Assets/Signup/DiseaseDetection.jsx"],"sourcesContent":["// import React from 'react';\r\n\r\n// const DiseaseDetection = () => {\r\n//     return (\r\n//         <div style={{ textAlign: 'center', padding: '20px' }}>\r\n//             <h1>Disease Detection</h1>\r\n//             <p>Here you can input data for disease detection.</p>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default DiseaseDetection;\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './DiseaseDetection.css';\r\n\r\nconst DiseaseDetection = () => {\r\n    const [file, setFile] = useState(null);\r\n    const navigate = useNavigate();  // useNavigate hook to navigate programmatically\r\n\r\n    const handleFileChange = (e) => {\r\n        const selectedFile = e.target.files[0];\r\n        \r\n        if (selectedFile) {\r\n            const fileType = selectedFile.type;\r\n            if (fileType === 'image/jpeg' || fileType === 'image/png' || fileType === 'application/pdf') {\r\n                setFile(selectedFile);\r\n            } else {\r\n                alert('Please upload a valid file (jpg, png, or pdf).');\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDetectDisease = () => {\r\n        alert('Disease detection in progress...');\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        navigate('/login');  // Navigate to login page\r\n    };\r\n\r\n    return (\r\n        <div style={styles.container}>\r\n            <button style={styles.logoutButton} onClick={handleLogout}>\r\n                Logout\r\n            </button>\r\n            \r\n            <h1 style={styles.header}>Disease Detection</h1>\r\n            <p style={styles.description}>Upload an image or PDF file for disease detection:</p>\r\n            \r\n            <input\r\n                type=\"file\"\r\n                accept=\".jpg, .png, .pdf\"\r\n                onChange={handleFileChange}\r\n                style={styles.fileInput}\r\n            />\r\n            \r\n            {file && (\r\n                <div>\r\n                    <h3>File Selected:</h3>\r\n                    <p>{file.name}</p>\r\n                    {/* Preview for image files */}\r\n                    {file.type.startsWith('image') && (\r\n                        <img\r\n                            src={URL.createObjectURL(file)}\r\n                            alt=\"Preview\"\r\n                            style={styles.imagePreview}\r\n                        />\r\n                    )}\r\n                    {/* Message for PDF files */}\r\n                    {file.type === 'application/pdf' && (\r\n                        <p>PDF file selected. You can process this file for disease detection.</p>\r\n                    )}\r\n                </div>\r\n            )}\r\n\r\n            {/* Detect Disease Button */}\r\n            <button style={styles.orangeButton} onClick={handleDetectDisease}>\r\n                Detect Disease\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    container: {\r\n        textAlign: 'center',\r\n        padding: '20px',\r\n        fontFamily: 'Arial, sans-serif',\r\n    },\r\n    logoutButton: {\r\n        position: 'absolute',\r\n        top: '10px',\r\n        left: '10px',\r\n        backgroundColor: 'orange',\r\n        color: 'white',\r\n        border: 'none',\r\n        padding: '10px 20px',\r\n        borderRadius: '5px',\r\n        cursor: 'pointer',\r\n        fontWeight: 'bold',\r\n    },\r\n    header: {\r\n        fontSize: '2rem',\r\n        color: '#333',\r\n    },\r\n    description: {\r\n        fontSize: '1.2rem',\r\n        margin: '20px 0',\r\n    },\r\n    fileInput: {\r\n        padding: '10px',\r\n        fontSize: '1rem',\r\n        marginTop: '20px',\r\n        borderRadius: '5px',\r\n        border: '1px solid #ccc',\r\n    },\r\n    imagePreview: {\r\n        maxWidth: '300px',\r\n        marginTop: '20px',\r\n    },\r\n    orangeButton: {\r\n        backgroundColor: 'orange',\r\n        color: 'white',\r\n        border: 'none',\r\n        padding: '15px 30px',\r\n        borderRadius: '5px',\r\n        cursor: 'pointer',\r\n        fontSize: '1rem',\r\n        fontWeight: 'bold',\r\n        marginTop: '20px',\r\n    },\r\n};\r\n\r\nexport default DiseaseDetection;"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC,CAAC,CAAE;;EAEjC,MAAMQ,gBAAgB,GAAIC,CAAC,IAAK;IAC5B,MAAMC,YAAY,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAEtC,IAAIF,YAAY,EAAE;MACd,MAAMG,QAAQ,GAAGH,YAAY,CAACI,IAAI;MAClC,IAAID,QAAQ,KAAK,YAAY,IAAIA,QAAQ,KAAK,WAAW,IAAIA,QAAQ,KAAK,iBAAiB,EAAE;QACzFP,OAAO,CAACI,YAAY,CAAC;MACzB,CAAC,MAAM;QACHK,KAAK,CAAC,gDAAgD,CAAC;MAC3D;IACJ;EACJ,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAC9BD,KAAK,CAAC,kCAAkC,CAAC;EAC7C,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACvBV,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAE;EACzB,CAAC;EAED,oBACIL,OAAA;IAAKgB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,gBACzBnB,OAAA;MAAQgB,KAAK,EAAEC,MAAM,CAACG,YAAa;MAACC,OAAO,EAAEN,YAAa;MAAAI,QAAA,EAAC;IAE3D;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAETzB,OAAA;MAAIgB,KAAK,EAAEC,MAAM,CAACS,MAAO;MAAAP,QAAA,EAAC;IAAiB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChDzB,OAAA;MAAGgB,KAAK,EAAEC,MAAM,CAACU,WAAY;MAAAR,QAAA,EAAC;IAAkD;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAEpFzB,OAAA;MACIY,IAAI,EAAC,MAAM;MACXgB,MAAM,EAAC,kBAAkB;MACzBC,QAAQ,EAAEvB,gBAAiB;MAC3BU,KAAK,EAAEC,MAAM,CAACa;IAAU;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,EAEDtB,IAAI,iBACDH,OAAA;MAAAmB,QAAA,gBACInB,OAAA;QAAAmB,QAAA,EAAI;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBzB,OAAA;QAAAmB,QAAA,EAAIhB,IAAI,CAAC4B;MAAI;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAEjBtB,IAAI,CAACS,IAAI,CAACoB,UAAU,CAAC,OAAO,CAAC,iBAC1BhC,OAAA;QACIiC,GAAG,EAAEC,GAAG,CAACC,eAAe,CAAChC,IAAI,CAAE;QAC/BiC,GAAG,EAAC,SAAS;QACbpB,KAAK,EAAEC,MAAM,CAACoB;MAAa;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CACJ,EAEAtB,IAAI,CAACS,IAAI,KAAK,iBAAiB,iBAC5BZ,OAAA;QAAAmB,QAAA,EAAG;MAAmE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC5E;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACR,eAGDzB,OAAA;MAAQgB,KAAK,EAAEC,MAAM,CAACqB,YAAa;MAACjB,OAAO,EAAEP,mBAAoB;MAAAK,QAAA,EAAC;IAElE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACvB,EAAA,CAlEID,gBAAgB;EAAA,QAEDH,WAAW;AAAA;AAAAyC,EAAA,GAF1BtC,gBAAgB;AAoEtB,MAAMgB,MAAM,GAAG;EACXC,SAAS,EAAE;IACPsB,SAAS,EAAE,QAAQ;IACnBC,OAAO,EAAE,MAAM;IACfC,UAAU,EAAE;EAChB,CAAC;EACDtB,YAAY,EAAE;IACVuB,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,MAAM;IACXC,IAAI,EAAE,MAAM;IACZC,eAAe,EAAE,QAAQ;IACzBC,KAAK,EAAE,OAAO;IACdC,MAAM,EAAE,MAAM;IACdP,OAAO,EAAE,WAAW;IACpBQ,YAAY,EAAE,KAAK;IACnBC,MAAM,EAAE,SAAS;IACjBC,UAAU,EAAE;EAChB,CAAC;EACDzB,MAAM,EAAE;IACJ0B,QAAQ,EAAE,MAAM;IAChBL,KAAK,EAAE;EACX,CAAC;EACDpB,WAAW,EAAE;IACTyB,QAAQ,EAAE,QAAQ;IAClBC,MAAM,EAAE;EACZ,CAAC;EACDvB,SAAS,EAAE;IACPW,OAAO,EAAE,MAAM;IACfW,QAAQ,EAAE,MAAM;IAChBE,SAAS,EAAE,MAAM;IACjBL,YAAY,EAAE,KAAK;IACnBD,MAAM,EAAE;EACZ,CAAC;EACDX,YAAY,EAAE;IACVkB,QAAQ,EAAE,OAAO;IACjBD,SAAS,EAAE;EACf,CAAC;EACDhB,YAAY,EAAE;IACVQ,eAAe,EAAE,QAAQ;IACzBC,KAAK,EAAE,OAAO;IACdC,MAAM,EAAE,MAAM;IACdP,OAAO,EAAE,WAAW;IACpBQ,YAAY,EAAE,KAAK;IACnBC,MAAM,EAAE,SAAS;IACjBE,QAAQ,EAAE,MAAM;IAChBD,UAAU,EAAE,MAAM;IAClBG,SAAS,EAAE;EACf;AACJ,CAAC;AAED,eAAerD,gBAAgB;AAAC,IAAAsC,EAAA;AAAAiB,YAAA,CAAAjB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}