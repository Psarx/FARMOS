{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\Fisat\\\\FARMOS\\\\frontend\\\\src\\\\components\\\\Assets\\\\Signup\\\\CropPrediction.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CropPrediction = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    N: \"\",\n    P: \"\",\n    K: \"\",\n    temperature: \"\",\n    humidity: \"\",\n    ph: \"\",\n    rainfall: \"\"\n  });\n  const navigate = useNavigate();\n  const [cropDetails, setCropDetails] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [showResults, setShowResults] = useState(false);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setCropDetails(null);\n    setError(null);\n    setLoading(true);\n    setShowResults(false);\n    try {\n      // First, get the prediction from the predict endpoint\n      const predictResponse = await fetch(\"http://localhost:5000/api/auth/predict\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          N: parseFloat(formData.N),\n          P: parseFloat(formData.P),\n          K: parseFloat(formData.K),\n          temperature: parseFloat(formData.temperature),\n          humidity: parseFloat(formData.humidity),\n          ph: parseFloat(formData.ph),\n          rainfall: parseFloat(formData.rainfall)\n        })\n      });\n      const predictData = await predictResponse.json();\n      if (!predictResponse.ok) {\n        setLoading(false);\n        setError(predictData.message || \"Error predicting crop\");\n        return;\n      }\n      const cropName = predictData.recommended_crop;\n\n      // Now fetch the crop details using the cropName\n      const detailsResponse = await fetch(`http://localhost:5000/api/auth/get_crop/${cropName}`);\n      const detailsData = await detailsResponse.json();\n      setLoading(false);\n      if (detailsResponse.ok) {\n        setCropDetails({\n          name: cropName,\n          details: detailsData,\n          imagePath: `src/components/Assets/Images/rice.png`\n        });\n        // Trigger the animation after successful prediction\n        setTimeout(() => setShowResults(true), 100);\n      } else {\n        setError(\"Error fetching crop details\");\n      }\n    } catch (err) {\n      setLoading(false);\n      setError(\"Failed to connect to the backend\");\n    }\n  };\n\n  // Format the crop details as points\n  const formatDetailsAsPoints = details => {\n    if (!details || !details.description) return [];\n    try {\n      const parsedData = JSON.parse(details.description);\n      let points = [];\n\n      // Extract all points from each category\n      Object.keys(parsedData).forEach(category => {\n        const categoryData = parsedData[category];\n        Object.values(categoryData).forEach(point => {\n          points.push(point);\n        });\n      });\n      return points;\n    } catch (err) {\n      console.error(\"Error parsing crop details:\", err);\n      return [\"Unable to parse crop details\"];\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.pageContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(\"/home\"),\n      style: styles.homeButton,\n      children: \"\\u2B05 Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      style: styles.formContainer,\n      initial: {\n        opacity: 0,\n        y: 30\n      },\n      animate: {\n        opacity: 1,\n        y: 0,\n        x: showResults ? \"-25%\" : \"0%\",\n        width: showResults ? \"40%\" : \"600px\"\n      },\n      transition: {\n        duration: 0.5,\n        ease: \"easeInOut\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: styles.header,\n        children: \"\\uD83C\\uDF31 Crop Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        style: styles.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.row,\n          children: [\"N\", \"P\", \"K\"].map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.inputGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: styles.label,\n              htmlFor: key,\n              children: [key, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: key,\n              name: key,\n              value: formData[key],\n              onChange: handleChange,\n              style: styles.input,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), [\"temperature\", \"humidity\", \"ph\", \"rainfall\"].map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.inputGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: styles.label,\n            htmlFor: key,\n            children: [key.charAt(0).toUpperCase() + key.slice(1), \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: key,\n            name: key,\n            value: formData[key],\n            onChange: handleChange,\n            style: styles.input,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(motion.button, {\n          type: \"submit\",\n          style: styles.submitButton,\n          disabled: loading,\n          whileHover: {\n            scale: 1.05\n          },\n          whileTap: {\n            scale: 0.95\n          },\n          children: loading ? \"Processing...\" : \"Predict Crop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(motion.div, {\n        style: styles.errorContainer,\n        initial: {\n          scale: 0.8,\n          opacity: 0\n        },\n        animate: {\n          scale: 1,\n          opacity: 1\n        },\n        transition: {\n          duration: 0.3\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: styles.error,\n          children: [\"\\u26A0\\uFE0F \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), cropDetails && /*#__PURE__*/_jsxDEV(motion.div, {\n      style: styles.resultContainer,\n      initial: {\n        opacity: 0,\n        x: \"100%\"\n      },\n      animate: {\n        opacity: showResults ? 1 : 0,\n        x: showResults ? \"25%\" : \"100%\",\n        width: \"40%\"\n      },\n      transition: {\n        duration: 0.5,\n        ease: \"easeInOut\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: styles.result,\n        children: \"\\uD83C\\uDF3E Recommended Crop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.cropName,\n        children: cropDetails.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.detailsContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.imageContainer,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: cropDetails.imagePath,\n            alt: cropDetails.name,\n            style: styles.cropImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.cropInfo,\n          children: formatDetailsAsPoints(cropDetails.details).map((point, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.pointItem,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: styles.bulletPoint,\n              children: \"\\u2022\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: styles.pointText,\n              children: point\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n_s(CropPrediction, \"lBSflyo9j+XdDMRFtZzUxrWnJfo=\", false, function () {\n  return [useNavigate];\n});\n_c = CropPrediction;\nconst styles = {\n  pageContainer: {\n    height: \"100vh\",\n    width: \"100vw\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#1a1a1a\",\n    // Dark grayish-black background\n    color: \"#ff7b42\",\n    overflow: \"hidden\" // Prevents scrolling during animation\n  },\n  formContainer: {\n    width: \"600px\",\n    padding: \"30px\",\n    borderRadius: \"12px\",\n    boxShadow: \"0px 10px 20px #ff7b42\",\n    textAlign: \"center\",\n    backgroundColor: \"#222\",\n    // Slightly lighter grayish-black\n    maxHeight: \"90vh\",\n    overflowY: \"auto\",\n    position: \"relative\" // For absolute positioning of child elements\n  },\n  header: {\n    fontSize: \"22px\",\n    fontWeight: \"bold\",\n    color: \"#ff7b42\",\n    marginBottom: \"15px\"\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"15px\",\n    width: \"100%\"\n  },\n  row: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    gap: \"10px\"\n  },\n  inputGroup: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"100%\"\n  },\n  label: {\n    fontWeight: \"600\",\n    color: \"#ff7b42\",\n    marginBottom: \"5px\"\n  },\n  homeButton: {\n    position: \"absolute\",\n    top: \"20px\",\n    left: \"20px\",\n    padding: \"10px 15px\",\n    fontSize: \"14px\",\n    fontWeight: \"bold\",\n    color: \"#ff7b42\",\n    backgroundColor: \"transparent\",\n    border: \"2px solid #ff7b42\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    transition: \"background 0.3s, color 0.3s\"\n  },\n  input: {\n    width: \"90%\",\n    padding: \"8px\",\n    borderRadius: \"6px\",\n    border: \"1px solid #ff7b42\",\n    fontSize: \"14px\",\n    backgroundColor: \"rgba(0, 0, 0, 0.6)\",\n    color: \"#ff7b42\",\n    transition: \"border-color 0.3s, transform 0.3s\",\n    boxSizing: \"border-box\"\n  },\n  submitButton: {\n    width: \"100%\",\n    padding: \"12px\",\n    fontSize: \"16px\",\n    fontWeight: \"bold\",\n    color: \"#000\",\n    backgroundColor: \"#ff7b42\",\n    border: \"none\",\n    borderRadius: \"6px\",\n    cursor: \"pointer\",\n    transition: \"background 0.3s, transform 0.3s\"\n  },\n  resultContainer: {\n    padding: \"30px\",\n    backgroundColor: \"#222\",\n    borderRadius: \"12px\",\n    boxShadow: \"0px 10px 20px #ff7b42\",\n    textAlign: \"center\",\n    maxHeight: \"90vh\",\n    overflowY: \"auto\"\n  },\n  result: {\n    color: \"#ff7b42\",\n    fontWeight: \"bold\",\n    fontSize: \"22px\"\n  },\n  cropName: {\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n    color: \"#ff7b42\",\n    marginBottom: \"15px\"\n  },\n  detailsContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    gap: \"15px\",\n    backgroundColor: \"rgba(0, 255, 0, 0.1)\",\n    padding: \"15px\",\n    borderRadius: \"8px\"\n  },\n  imageContainer: {\n    width: \"100%\",\n    maxWidth: \"200px\",\n    height: \"200px\",\n    overflow: \"hidden\",\n    borderRadius: \"10px\",\n    border: \"2px solid #ff7b42\"\n  },\n  cropImage: {\n    width: \"100%\",\n    height: \"100%\",\n    objectFit: \"cover\"\n  },\n  cropInfo: {\n    width: \"100%\",\n    textAlign: \"left\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"10px\",\n    marginTop: \"10px\"\n  },\n  pointItem: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    gap: \"8px\",\n    textAlign: \"left\"\n  },\n  bulletPoint: {\n    color: \"#ff7b42\",\n    fontSize: \"20px\",\n    lineHeight: \"20px\"\n  },\n  pointText: {\n    color: \"#fff\",\n    fontSize: \"14px\",\n    lineHeight: \"1.5\"\n  },\n  errorContainer: {\n    marginTop: \"20px\",\n    padding: \"15px\",\n    backgroundColor: \"#ff000033\",\n    borderRadius: \"8px\",\n    textAlign: \"center\",\n    width: \"100%\"\n  },\n  error: {\n    color: \"#ff4444\",\n    fontWeight: \"bold\"\n  }\n};\nexport default CropPrediction;\nvar _c;\n$RefreshReg$(_c, \"CropPrediction\");","map":{"version":3,"names":["React","useState","motion","useNavigate","jsxDEV","_jsxDEV","CropPrediction","_s","formData","setFormData","N","P","K","temperature","humidity","ph","rainfall","navigate","cropDetails","setCropDetails","loading","setLoading","error","setError","showResults","setShowResults","handleChange","e","target","name","value","handleSubmit","preventDefault","predictResponse","fetch","method","headers","body","JSON","stringify","parseFloat","predictData","json","ok","message","cropName","recommended_crop","detailsResponse","detailsData","details","imagePath","setTimeout","err","formatDetailsAsPoints","description","parsedData","parse","points","Object","keys","forEach","category","categoryData","values","point","push","console","style","styles","pageContainer","children","onClick","homeButton","fileName","_jsxFileName","lineNumber","columnNumber","div","formContainer","initial","opacity","y","animate","x","width","transition","duration","ease","header","form","onSubmit","row","map","key","inputGroup","label","htmlFor","type","id","onChange","input","required","charAt","toUpperCase","slice","button","submitButton","disabled","whileHover","scale","whileTap","errorContainer","resultContainer","result","detailsContainer","imageContainer","src","alt","cropImage","cropInfo","index","pointItem","bulletPoint","pointText","_c","height","display","justifyContent","alignItems","backgroundColor","color","overflow","padding","borderRadius","boxShadow","textAlign","maxHeight","overflowY","position","fontSize","fontWeight","marginBottom","flexDirection","gap","top","left","border","cursor","boxSizing","maxWidth","objectFit","marginTop","lineHeight","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/Fisat/FARMOS/frontend/src/components/Assets/Signup/CropPrediction.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst CropPrediction = () => {\r\n    const [formData, setFormData] = useState({\r\n        N: \"\",\r\n        P: \"\",\r\n        K: \"\",\r\n        temperature: \"\",\r\n        humidity: \"\",\r\n        ph: \"\",\r\n        rainfall: \"\",\r\n    });\r\n    const navigate = useNavigate();\r\n\r\n    const [cropDetails, setCropDetails] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [showResults, setShowResults] = useState(false);\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setCropDetails(null);\r\n        setError(null);\r\n        setLoading(true);\r\n        setShowResults(false);\r\n\r\n        try {\r\n            // First, get the prediction from the predict endpoint\r\n            const predictResponse = await fetch(\"http://localhost:5000/api/auth/predict\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    N: parseFloat(formData.N),\r\n                    P: parseFloat(formData.P),\r\n                    K: parseFloat(formData.K),\r\n                    temperature: parseFloat(formData.temperature),\r\n                    humidity: parseFloat(formData.humidity),\r\n                    ph: parseFloat(formData.ph),\r\n                    rainfall: parseFloat(formData.rainfall),\r\n                }),\r\n            });\r\n\r\n            const predictData = await predictResponse.json();\r\n            \r\n            if (!predictResponse.ok) {\r\n                setLoading(false);\r\n                setError(predictData.message || \"Error predicting crop\");\r\n                return;\r\n            }\r\n            \r\n            const cropName = predictData.recommended_crop;\r\n            \r\n            // Now fetch the crop details using the cropName\r\n            const detailsResponse = await fetch(`http://localhost:5000/api/auth/get_crop/${cropName}`);\r\n            const detailsData = await detailsResponse.json();\r\n            \r\n            setLoading(false);\r\n            \r\n            if (detailsResponse.ok) {\r\n                setCropDetails({\r\n                    name: cropName,\r\n                    details: detailsData,\r\n                    imagePath: `src/components/Assets/Images/rice.png`\r\n                });\r\n                // Trigger the animation after successful prediction\r\n                setTimeout(() => setShowResults(true), 100);\r\n            } else {\r\n                setError(\"Error fetching crop details\");\r\n            }\r\n        } catch (err) {\r\n            setLoading(false);\r\n            setError(\"Failed to connect to the backend\");\r\n        }\r\n    };\r\n\r\n    // Format the crop details as points\r\n    const formatDetailsAsPoints = (details) => {\r\n        if (!details || !details.description) return [];\r\n        \r\n        try {\r\n            const parsedData = JSON.parse(details.description);\r\n            let points = [];\r\n            \r\n            // Extract all points from each category\r\n            Object.keys(parsedData).forEach(category => {\r\n                const categoryData = parsedData[category];\r\n                \r\n                Object.values(categoryData).forEach(point => {\r\n                    points.push(point);\r\n                });\r\n            });\r\n            \r\n            return points;\r\n        } catch (err) {\r\n            console.error(\"Error parsing crop details:\", err);\r\n            return [\"Unable to parse crop details\"];\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={styles.pageContainer}>\r\n            {/* Home Button */}\r\n            <button onClick={() => navigate(\"/home\")} style={styles.homeButton}>\r\n                ⬅ Home\r\n            </button>\r\n\r\n            {/* Form Component */}\r\n            <motion.div\r\n                style={styles.formContainer}\r\n                initial={{ opacity: 0, y: 30 }}\r\n                animate={{ \r\n                    opacity: 1, \r\n                    y: 0,\r\n                    x: showResults ? \"-25%\" : \"0%\",\r\n                    width: showResults ? \"40%\" : \"600px\" \r\n                }}\r\n                transition={{ duration: 0.5, ease: \"easeInOut\" }}\r\n            >\r\n                <h1 style={styles.header}>🌱 Crop Prediction</h1>\r\n                \r\n                <form style={styles.form} onSubmit={handleSubmit}>\r\n                    <div style={styles.row}>\r\n                        {[\"N\", \"P\", \"K\"].map((key) => (\r\n                            <div key={key} style={styles.inputGroup}>\r\n                                <label style={styles.label} htmlFor={key}>\r\n                                    {key}:\r\n                                </label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    id={key}\r\n                                    name={key}\r\n                                    value={formData[key]}\r\n                                    onChange={handleChange}\r\n                                    style={styles.input}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    {[\"temperature\", \"humidity\", \"ph\", \"rainfall\"].map((key) => (\r\n                        <div key={key} style={styles.inputGroup}>\r\n                            <label style={styles.label} htmlFor={key}>\r\n                                {key.charAt(0).toUpperCase() + key.slice(1)}:\r\n                            </label>\r\n                            <input\r\n                                type=\"number\"\r\n                                id={key}\r\n                                name={key}\r\n                                value={formData[key]}\r\n                                onChange={handleChange}\r\n                                style={styles.input}\r\n                                required\r\n                            />\r\n                        </div>\r\n                    ))}\r\n\r\n                    <motion.button\r\n                        type=\"submit\"\r\n                        style={styles.submitButton}\r\n                        disabled={loading}\r\n                        whileHover={{ scale: 1.05 }}\r\n                        whileTap={{ scale: 0.95 }}\r\n                    >\r\n                        {loading ? \"Processing...\" : \"Predict Crop\"}\r\n                    </motion.button>\r\n                </form>\r\n\r\n                {error && (\r\n                    <motion.div\r\n                        style={styles.errorContainer}\r\n                        initial={{ scale: 0.8, opacity: 0 }}\r\n                        animate={{ scale: 1, opacity: 1 }}\r\n                        transition={{ duration: 0.3 }}\r\n                    >\r\n                        <h2 style={styles.error}>⚠️ {error}</h2>\r\n                    </motion.div>\r\n                )}\r\n            </motion.div>\r\n\r\n            {/* Results Component */}\r\n            {cropDetails && (\r\n                <motion.div\r\n                    style={styles.resultContainer}\r\n                    initial={{ opacity: 0, x: \"100%\" }}\r\n                    animate={{ \r\n                        opacity: showResults ? 1 : 0, \r\n                        x: showResults ? \"25%\" : \"100%\",\r\n                        width: \"40%\"\r\n                    }}\r\n                    transition={{ duration: 0.5, ease: \"easeInOut\" }}\r\n                >\r\n                    <h2 style={styles.result}>🌾 Recommended Crop</h2>\r\n                    <p style={styles.cropName}>{cropDetails.name}</p>\r\n                    \r\n                    <div style={styles.detailsContainer}>\r\n                        <div style={styles.imageContainer}>\r\n                            <img \r\n                                src={cropDetails.imagePath} \r\n                                alt={cropDetails.name}\r\n                                style={styles.cropImage}\r\n                            />\r\n                        </div>\r\n                        \r\n                        <div style={styles.cropInfo}>\r\n                            {formatDetailsAsPoints(cropDetails.details).map((point, index) => (\r\n                                <div key={index} style={styles.pointItem}>\r\n                                    <span style={styles.bulletPoint}>•</span>\r\n                                    <span style={styles.pointText}>{point}</span>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </motion.div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    pageContainer: {\r\n        height: \"100vh\",\r\n        width: \"100vw\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        backgroundColor: \"#1a1a1a\", // Dark grayish-black background\r\n        color: \"#ff7b42\",\r\n        overflow: \"hidden\", // Prevents scrolling during animation\r\n    },\r\n    formContainer: {\r\n        width: \"600px\",\r\n        padding: \"30px\",\r\n        borderRadius: \"12px\",\r\n        boxShadow: \"0px 10px 20px #ff7b42\",\r\n        textAlign: \"center\",\r\n        backgroundColor: \"#222\", // Slightly lighter grayish-black\r\n        maxHeight: \"90vh\",\r\n        overflowY: \"auto\",\r\n        position: \"relative\", // For absolute positioning of child elements\r\n    },\r\n    header: {\r\n        fontSize: \"22px\",\r\n        fontWeight: \"bold\",\r\n        color: \"#ff7b42\",\r\n        marginBottom: \"15px\",\r\n    },\r\n    form: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        gap: \"15px\",\r\n        width: \"100%\",\r\n    },\r\n    row: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        gap: \"10px\",\r\n    },\r\n    inputGroup: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n    },\r\n    label: {\r\n        fontWeight: \"600\",\r\n        color: \"#ff7b42\",\r\n        marginBottom: \"5px\",\r\n    },\r\n    homeButton: {\r\n        position: \"absolute\",\r\n        top: \"20px\",\r\n        left: \"20px\",\r\n        padding: \"10px 15px\",\r\n        fontSize: \"14px\",\r\n        fontWeight: \"bold\",\r\n        color: \"#ff7b42\",\r\n        backgroundColor: \"transparent\",\r\n        border: \"2px solid #ff7b42\",\r\n        borderRadius: \"5px\",\r\n        cursor: \"pointer\",\r\n        transition: \"background 0.3s, color 0.3s\",\r\n    },\r\n    input: {\r\n        width: \"90%\",\r\n        padding: \"8px\",\r\n        borderRadius: \"6px\",\r\n        border: \"1px solid #ff7b42\",\r\n        fontSize: \"14px\",\r\n        backgroundColor: \"rgba(0, 0, 0, 0.6)\",\r\n        color: \"#ff7b42\",\r\n        transition: \"border-color 0.3s, transform 0.3s\",\r\n        boxSizing: \"border-box\",\r\n    },\r\n    submitButton: {\r\n        width: \"100%\",\r\n        padding: \"12px\",\r\n        fontSize: \"16px\",\r\n        fontWeight: \"bold\",\r\n        color: \"#000\",\r\n        backgroundColor: \"#ff7b42\",\r\n        border: \"none\",\r\n        borderRadius: \"6px\",\r\n        cursor: \"pointer\",\r\n        transition: \"background 0.3s, transform 0.3s\",\r\n    },\r\n    resultContainer: {\r\n        padding: \"30px\",\r\n        backgroundColor: \"#222\",\r\n        borderRadius: \"12px\",\r\n        boxShadow: \"0px 10px 20px #ff7b42\",\r\n        textAlign: \"center\",\r\n        maxHeight: \"90vh\",\r\n        overflowY: \"auto\",\r\n    },\r\n    result: {\r\n        color: \"#ff7b42\",\r\n        fontWeight: \"bold\",\r\n        fontSize: \"22px\",\r\n    },\r\n    cropName: {\r\n        fontSize: \"20px\",\r\n        fontWeight: \"bold\",\r\n        color: \"#ff7b42\",\r\n        marginBottom: \"15px\",\r\n    },\r\n    detailsContainer: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        gap: \"15px\",\r\n        backgroundColor: \"rgba(0, 255, 0, 0.1)\",\r\n        padding: \"15px\",\r\n        borderRadius: \"8px\",\r\n    },\r\n    imageContainer: {\r\n        width: \"100%\",\r\n        maxWidth: \"200px\",\r\n        height: \"200px\",\r\n        overflow: \"hidden\",\r\n        borderRadius: \"10px\",\r\n        border: \"2px solid #ff7b42\",\r\n    },\r\n    cropImage: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        objectFit: \"cover\",\r\n    },\r\n    cropInfo: {\r\n        width: \"100%\",\r\n        textAlign: \"left\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        gap: \"10px\",\r\n        marginTop: \"10px\",\r\n    },\r\n    pointItem: {\r\n        display: \"flex\",\r\n        alignItems: \"flex-start\",\r\n        gap: \"8px\",\r\n        textAlign: \"left\",\r\n    },\r\n    bulletPoint: {\r\n        color: \"#ff7b42\",\r\n        fontSize: \"20px\",\r\n        lineHeight: \"20px\",\r\n    },\r\n    pointText: {\r\n        color: \"#fff\",\r\n        fontSize: \"14px\",\r\n        lineHeight: \"1.5\",\r\n    },\r\n    errorContainer: {\r\n        marginTop: \"20px\",\r\n        padding: \"15px\",\r\n        backgroundColor: \"#ff000033\",\r\n        borderRadius: \"8px\",\r\n        textAlign: \"center\",\r\n        width: \"100%\",\r\n    },\r\n    error: {\r\n        color: \"#ff4444\",\r\n        fontWeight: \"bold\",\r\n    },\r\n};\r\n\r\nexport default CropPrediction;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}