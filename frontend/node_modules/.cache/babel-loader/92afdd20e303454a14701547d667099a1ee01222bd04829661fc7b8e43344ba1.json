{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\Fisat\\\\FARMOS\\\\frontend\\\\src\\\\components\\\\Assets\\\\Signup\\\\CropPrediction.jsx\",\n  _s = $RefreshSig$();\n// // import React, { useState } from 'react';\n// // import './CropPrediction.css';\n// // import wheatImage from '../../Assets/Images/wheat.jpg';\n\n// // const CropPrediction = () => {\n// //     const [formData, setFormData] = useState({\n// //         nitrogen: '',\n// //         phosphorus: '',\n// //         potassium: '',\n// //         temperature: '',\n// //         humidity: '',\n// //         ph: '',\n// //         rainfall: '',\n// //         location: '',\n// //     });\n\n// //     const handleChange = (e) => {\n// //         setFormData({\n// //             ...formData,\n// //             [e.target.name]: e.target.value,\n// //         });\n// //     };\n\n// //     const handleSubmit = (e) => {\n// //         e.preventDefault();\n// //         alert('Predicting'); // Alert when the button is clicked\n// //         console.log('Submitted Data:', formData);\n\n// //         // Simulate an API call or database update\n// //         alert('Crop Prediction data submitted successfully!');\n// //     };\n\n// //     return (\n// //         <div className=\"container\">\n// //             <div className=\"main-container\">\n// //                 <div className=\"left-section\">\n// //                     <div className=\"header\">\n// //                         <div className=\"text\">Crop Prediction</div>\n// //                         <div className=\"underline\"></div>\n// //                     </div>\n// //                     <form className=\"inputs\" onSubmit={handleSubmit}>\n// //                         {Object.keys(formData).map((key) => (\n// //                             <div key={key} className=\"input\">\n// //                                 <input\n// //                                     type=\"text\"\n// //                                     placeholder={key.charAt(0).toUpperCase() + key.slice(1)}\n// //                                     name={key}\n// //                                     value={formData[key]}\n// //                                     onChange={handleChange}\n// //                                     required\n// //                                 />\n// //                             </div>\n// //                         ))}\n// //                         <div className=\"submit-container\">\n// //                             <button type=\"submit\" className=\"submit\">\n// //                                 Predict Crop\n// //                             </button>\n// //                         </div>\n// //                     </form>\n// //                 </div>\n// //                 <div className=\"right-panel\">\n// //                     <img src={wheatImage} alt=\"Wheat background\" className=\"background-image\" />\n// //                 </div>\n// //             </div>\n// //         </div>\n// //     );\n// // };\n\n// // export default CropPrediction;\n\n// import React, { useState } from 'react';\n// import './CropPrediction.css';\n// import wheatImage from '../../Assets/Images/wheat.jpg';\n\n// const CropPrediction = () => {\n//     const [formData, setFormData] = useState({\n//         nitrogen: '',\n//         phosphorus: '',\n//         potassium: '',\n//         temperature: '',\n//         humidity: '',\n//         ph: '',\n//         rainfall: '',\n//         location: '',\n//     });\n\n//     const handleChange = (e) => {\n//         setFormData({\n//             ...formData,\n//             [e.target.name]: e.target.value,\n//         });\n//     };\n\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         console.log('Submitted Data:', formData);\n\n//         // Simulate an API call or database update\n//         alert('Crop Prediction and Recommendation data submitted successfully!');\n//     };\n\n//     return (\n//         <div className=\"container\">\n//             <div className=\"main-container\">\n//                 <div className=\"left-section\">\n//                     <div className=\"header\">\n//                         <div className=\"text\">Crop Prediction & Recommendation</div>\n//                         <div className=\"underline\"></div>\n//                     </div>\n//                     <form className=\"inputs\" onSubmit={handleSubmit}>\n//                         <div className=\"form-section\">\n//                             <div className=\"section-title\">Soil and Weather Details</div>\n//                             <div className=\"input\">\n//                                 <input\n//                                     type=\"text\"\n//                                     placeholder=\"Nitrogen (N)\"\n//                                     name=\"nitrogen\"\n//                                     value={formData.nitrogen}\n//                                     onChange={handleChange}\n//                                     required\n//                                 />\n//                             </div>\n//                             <div className=\"input\">\n//                                 <input\n//                                     type=\"text\"\n//                                     placeholder=\"Phosphorus (P)\"\n//                                     name=\"phosphorus\"\n//                                     value={formData.phosphorus}\n//                                     onChange={handleChange}\n//                                     required\n//                                 />\n//                             </div>\n//                             <div className=\"input\">\n//                                 <input\n//                                     type=\"text\"\n//                                     placeholder=\"Potassium (K)\"\n//                                     name=\"potassium\"\n//                                     value={formData.potassium}\n//                                     onChange={handleChange}\n//                                     required\n//                                 />\n//                             </div>\n//                             <div className=\"input\">\n//                                 <input\n//                                     type=\"text\"\n//                                     placeholder=\"pH Level\"\n//                                     name=\"ph\"\n//                                     value={formData.ph}\n//                                     onChange={handleChange}\n//                                     required\n//                                 />\n//                             </div>\n//                         </div>\n//                         <div className=\"form-section\">\n//                             <div className=\"section-title\">Environmental Conditions</div>\n//                             <div className=\"input\">\n//                                 <input\n//                                     type=\"text\"\n//                                     placeholder=\"Temperature (Â°C)\"\n//                                     name=\"temperature\"\n//                                     value={formData.temperature}\n//                                     onChange={handleChange}\n//                                     required\n//                                 />\n//                             </div>\n//                             <div className=\"input\">\n//                                 <input\n//                                     type=\"text\"\n//                                     placeholder=\"Humidity (%)\"\n//                                     name=\"humidity\"\n//                                     value={formData.humidity}\n//                                     onChange={handleChange}\n//                                     required\n//                                 />\n//                             </div>\n//                             <div className=\"input\">\n//                                 <input\n//                                     type=\"text\"\n//                                     placeholder=\"Rainfall (mm)\"\n//                                     name=\"rainfall\"\n//                                     value={formData.rainfall}\n//                                     onChange={handleChange}\n//                                     required\n//                                 />\n//                             </div>\n//                             <div className=\"input\">\n//                                 <input\n//                                     type=\"text\"\n//                                     placeholder=\"Location\"\n//                                     name=\"location\"\n//                                     value={formData.location}\n//                                     onChange={handleChange}\n//                                     required\n//                                 />\n//                             </div>\n//                         </div>\n//                         <div className=\"submit-container\">\n//                             <button type=\"submit\" className=\"submit\">\n//                                 Recommend Crop\n//                             </button>\n//                         </div>\n//                     </form>\n//                 </div>\n//                 <div className=\"right-panel\">\n//                     <img src={wheatImage} alt=\"Wheat background\" className=\"background-image\" />\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default CropPrediction;\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CropPrediction = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    nitrogen: '',\n    phosphorus: '',\n    potassium: '',\n    temperature: '',\n    humidity: '',\n    ph: '',\n    rainfall: '',\n    location: ''\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('Submitted Data:', formData);\n\n    // Simulate an API call or database update\n    alert('Crop Prediction data submitted successfully!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: styles.header,\n      children: \"Crop Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      style: styles.form,\n      onSubmit: handleSubmit,\n      children: [Object.keys(formData).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.inputGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.label,\n          htmlFor: key,\n          children: [key.charAt(0).toUpperCase() + key.slice(1), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: key,\n          name: key,\n          value: formData[key],\n          onChange: handleChange,\n          style: styles.input,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 25\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: styles.submitButton,\n        children: \"Predict Crop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 9\n  }, this);\n};\n_s(CropPrediction, \"twqMRXUlCDdv7ZXj7kYXMbX+JBw=\");\n_c = CropPrediction;\nconst styles = {\n  container: {\n    maxWidth: '500px',\n    margin: '50px auto',\n    padding: '20px',\n    borderRadius: '10px',\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\n    backgroundColor: '#fff',\n    fontFamily: 'Arial, sans-serif'\n  },\n  header: {\n    textAlign: 'center',\n    color: '#333',\n    marginBottom: '20px'\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '15px'\n  },\n  inputGroup: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  label: {\n    marginBottom: '5px',\n    fontWeight: 'bold'\n  },\n  input: {\n    padding: '10px',\n    borderRadius: '5px',\n    border: '1px solid #ccc'\n  },\n  submitButton: {\n    padding: '10px 15px',\n    border: 'none',\n    borderRadius: '5px',\n    backgroundColor: 'orange',\n    color: 'white',\n    fontWeight: 'bold',\n    cursor: 'pointer',\n    textAlign: 'center'\n  }\n};\nexport default CropPrediction;\nvar _c;\n$RefreshReg$(_c, \"CropPrediction\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CropPrediction","_s","formData","setFormData","nitrogen","phosphorus","potassium","temperature","humidity","ph","rainfall","location","handleChange","e","target","name","value","handleSubmit","preventDefault","console","log","alert","style","styles","container","children","header","fileName","_jsxFileName","lineNumber","columnNumber","form","onSubmit","Object","keys","map","key","inputGroup","label","htmlFor","charAt","toUpperCase","slice","type","id","onChange","input","required","submitButton","_c","maxWidth","margin","padding","borderRadius","boxShadow","backgroundColor","fontFamily","textAlign","color","marginBottom","display","flexDirection","gap","fontWeight","border","cursor","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/Fisat/FARMOS/frontend/src/components/Assets/Signup/CropPrediction.jsx"],"sourcesContent":["// // import React, { useState } from 'react';\r\n// // import './CropPrediction.css';\r\n// // import wheatImage from '../../Assets/Images/wheat.jpg';\r\n\r\n// // const CropPrediction = () => {\r\n// //     const [formData, setFormData] = useState({\r\n// //         nitrogen: '',\r\n// //         phosphorus: '',\r\n// //         potassium: '',\r\n// //         temperature: '',\r\n// //         humidity: '',\r\n// //         ph: '',\r\n// //         rainfall: '',\r\n// //         location: '',\r\n// //     });\r\n\r\n// //     const handleChange = (e) => {\r\n// //         setFormData({\r\n// //             ...formData,\r\n// //             [e.target.name]: e.target.value,\r\n// //         });\r\n// //     };\r\n\r\n// //     const handleSubmit = (e) => {\r\n// //         e.preventDefault();\r\n// //         alert('Predicting'); // Alert when the button is clicked\r\n// //         console.log('Submitted Data:', formData);\r\n\r\n// //         // Simulate an API call or database update\r\n// //         alert('Crop Prediction data submitted successfully!');\r\n// //     };\r\n\r\n// //     return (\r\n// //         <div className=\"container\">\r\n// //             <div className=\"main-container\">\r\n// //                 <div className=\"left-section\">\r\n// //                     <div className=\"header\">\r\n// //                         <div className=\"text\">Crop Prediction</div>\r\n// //                         <div className=\"underline\"></div>\r\n// //                     </div>\r\n// //                     <form className=\"inputs\" onSubmit={handleSubmit}>\r\n// //                         {Object.keys(formData).map((key) => (\r\n// //                             <div key={key} className=\"input\">\r\n// //                                 <input\r\n// //                                     type=\"text\"\r\n// //                                     placeholder={key.charAt(0).toUpperCase() + key.slice(1)}\r\n// //                                     name={key}\r\n// //                                     value={formData[key]}\r\n// //                                     onChange={handleChange}\r\n// //                                     required\r\n// //                                 />\r\n// //                             </div>\r\n// //                         ))}\r\n// //                         <div className=\"submit-container\">\r\n// //                             <button type=\"submit\" className=\"submit\">\r\n// //                                 Predict Crop\r\n// //                             </button>\r\n// //                         </div>\r\n// //                     </form>\r\n// //                 </div>\r\n// //                 <div className=\"right-panel\">\r\n// //                     <img src={wheatImage} alt=\"Wheat background\" className=\"background-image\" />\r\n// //                 </div>\r\n// //             </div>\r\n// //         </div>\r\n// //     );\r\n// // };\r\n\r\n// // export default CropPrediction;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import './CropPrediction.css';\r\n// import wheatImage from '../../Assets/Images/wheat.jpg';\r\n\r\n// const CropPrediction = () => {\r\n//     const [formData, setFormData] = useState({\r\n//         nitrogen: '',\r\n//         phosphorus: '',\r\n//         potassium: '',\r\n//         temperature: '',\r\n//         humidity: '',\r\n//         ph: '',\r\n//         rainfall: '',\r\n//         location: '',\r\n//     });\r\n\r\n//     const handleChange = (e) => {\r\n//         setFormData({\r\n//             ...formData,\r\n//             [e.target.name]: e.target.value,\r\n//         });\r\n//     };\r\n\r\n//     const handleSubmit = (e) => {\r\n//         e.preventDefault();\r\n//         console.log('Submitted Data:', formData);\r\n\r\n//         // Simulate an API call or database update\r\n//         alert('Crop Prediction and Recommendation data submitted successfully!');\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"container\">\r\n//             <div className=\"main-container\">\r\n//                 <div className=\"left-section\">\r\n//                     <div className=\"header\">\r\n//                         <div className=\"text\">Crop Prediction & Recommendation</div>\r\n//                         <div className=\"underline\"></div>\r\n//                     </div>\r\n//                     <form className=\"inputs\" onSubmit={handleSubmit}>\r\n//                         <div className=\"form-section\">\r\n//                             <div className=\"section-title\">Soil and Weather Details</div>\r\n//                             <div className=\"input\">\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Nitrogen (N)\"\r\n//                                     name=\"nitrogen\"\r\n//                                     value={formData.nitrogen}\r\n//                                     onChange={handleChange}\r\n//                                     required\r\n//                                 />\r\n//                             </div>\r\n//                             <div className=\"input\">\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Phosphorus (P)\"\r\n//                                     name=\"phosphorus\"\r\n//                                     value={formData.phosphorus}\r\n//                                     onChange={handleChange}\r\n//                                     required\r\n//                                 />\r\n//                             </div>\r\n//                             <div className=\"input\">\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Potassium (K)\"\r\n//                                     name=\"potassium\"\r\n//                                     value={formData.potassium}\r\n//                                     onChange={handleChange}\r\n//                                     required\r\n//                                 />\r\n//                             </div>\r\n//                             <div className=\"input\">\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     placeholder=\"pH Level\"\r\n//                                     name=\"ph\"\r\n//                                     value={formData.ph}\r\n//                                     onChange={handleChange}\r\n//                                     required\r\n//                                 />\r\n//                             </div>\r\n//                         </div>\r\n//                         <div className=\"form-section\">\r\n//                             <div className=\"section-title\">Environmental Conditions</div>\r\n//                             <div className=\"input\">\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Temperature (Â°C)\"\r\n//                                     name=\"temperature\"\r\n//                                     value={formData.temperature}\r\n//                                     onChange={handleChange}\r\n//                                     required\r\n//                                 />\r\n//                             </div>\r\n//                             <div className=\"input\">\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Humidity (%)\"\r\n//                                     name=\"humidity\"\r\n//                                     value={formData.humidity}\r\n//                                     onChange={handleChange}\r\n//                                     required\r\n//                                 />\r\n//                             </div>\r\n//                             <div className=\"input\">\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Rainfall (mm)\"\r\n//                                     name=\"rainfall\"\r\n//                                     value={formData.rainfall}\r\n//                                     onChange={handleChange}\r\n//                                     required\r\n//                                 />\r\n//                             </div>\r\n//                             <div className=\"input\">\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Location\"\r\n//                                     name=\"location\"\r\n//                                     value={formData.location}\r\n//                                     onChange={handleChange}\r\n//                                     required\r\n//                                 />\r\n//                             </div>\r\n//                         </div>\r\n//                         <div className=\"submit-container\">\r\n//                             <button type=\"submit\" className=\"submit\">\r\n//                                 Recommend Crop\r\n//                             </button>\r\n//                         </div>\r\n//                     </form>\r\n//                 </div>\r\n//                 <div className=\"right-panel\">\r\n//                     <img src={wheatImage} alt=\"Wheat background\" className=\"background-image\" />\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default CropPrediction;\r\n\r\nimport React, { useState } from 'react';\r\n\r\nconst CropPrediction = () => {\r\n    const [formData, setFormData] = useState({\r\n        nitrogen: '',\r\n        phosphorus: '',\r\n        potassium: '',\r\n        temperature: '',\r\n        humidity: '',\r\n        ph: '',\r\n        rainfall: '',\r\n        location: '',\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log('Submitted Data:', formData);\r\n\r\n        // Simulate an API call or database update\r\n        alert('Crop Prediction data submitted successfully!');\r\n    };\r\n\r\n    return (\r\n        <div style={styles.container}>\r\n            <h1 style={styles.header}>Crop Prediction</h1>\r\n            <form style={styles.form} onSubmit={handleSubmit}>\r\n                {Object.keys(formData).map((key) => (\r\n                    <div key={key} style={styles.inputGroup}>\r\n                        <label style={styles.label} htmlFor={key}>\r\n                            {key.charAt(0).toUpperCase() + key.slice(1)}:\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id={key}\r\n                            name={key}\r\n                            value={formData[key]}\r\n                            onChange={handleChange}\r\n                            style={styles.input}\r\n                            required\r\n                        />\r\n                    </div>\r\n                ))}\r\n                <button type=\"submit\" style={styles.submitButton}>\r\n                    Predict Crop\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    container: {\r\n        maxWidth: '500px',\r\n        margin: '50px auto',\r\n        padding: '20px',\r\n        borderRadius: '10px',\r\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\r\n        backgroundColor: '#fff',\r\n        fontFamily: 'Arial, sans-serif',\r\n    },\r\n    header: {\r\n        textAlign: 'center',\r\n        color: '#333',\r\n        marginBottom: '20px',\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: '15px',\r\n    },\r\n    inputGroup: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    label: {\r\n        marginBottom: '5px',\r\n        fontWeight: 'bold',\r\n    },\r\n    input: {\r\n        padding: '10px',\r\n        borderRadius: '5px',\r\n        border: '1px solid #ccc',\r\n    },\r\n    submitButton: {\r\n        padding: '10px 15px',\r\n        border: 'none',\r\n        borderRadius: '5px',\r\n        backgroundColor: 'orange',\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        cursor: 'pointer',\r\n        textAlign: 'center',\r\n    },\r\n};\r\n\r\nexport default CropPrediction;"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IACrCO,QAAQ,EAAE,EAAE;IACZC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}